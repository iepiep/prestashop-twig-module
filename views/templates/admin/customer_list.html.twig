{% extends '@PrestaShop/Admin/layout.html.twig' %}

{% block content %}
  <div class="card">
    <h3 class="card-header">
      <i class="material-icons">list</i> {{ 'Customer Appointments'|trans({}, 'Modules.Dimsymfony.Admin') }}
    </h3>
    <div class="card-body">
      <form id="itinerary-form" action="{{ path('dimsymfony_itinerary') }}" method="post">
        <table class="table">
          <thead>
            <tr>
              <th>{{ 'ID'|trans({}, 'Admin.Global') }}</th>
              <th>{{ 'Last Name'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'First Name'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Address'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Postal Code'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'City'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Phone'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Email'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Preferred Date 1'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Preferred Date 2'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>{{ 'Visited'|trans({}, 'Modules.Dimsymfony.Admin') }}</th>
              <th>
                <input type="checkbox" id="select-all"> {{ 'Select All'|trans({}, 'Admin.Actions') }}
              </th>
            </tr>
          </thead>
          <tbody>
            {% for customer in customerData %}
              <tr>
                <td>{{ customer.id }}</td>
                <td>{{ customer.lastName }}</td>
                <td>{{ customer.firstName }}</td>
                <td>{{ customer.address }}</td>
                <td>{{ customer.postalCode }}</td>
                <td>{{ customer.city }}</td>
                <td>{{ customer.phone }}</td>
                <td>{{ customer.email }}</td>
                <td>{{ customer.dateCreneau1 }}</td>
                <td>{{ customer.dateCreneau2 }}</td>
                <td>{{ customer.visited ? 'Yes'|trans({}, 'Admin.Global') : 'No'|trans({}, 'Admin.Global') }}</td>
                <td>
                  <input type="checkbox" name="selected_customers[]" value="{{ customer.id }}" class="customer-checkbox">
                </td>
              </tr>
            {% else %}
              <tr>
                <td colspan="12">{{ 'No customer data found.'|trans({}, 'Modules.Dimsymfony.Admin') }}</td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
        <button type="submit" class="btn btn-primary">{{ 'Generate Itinerary'|trans({}, 'Modules.Dimsymfony.Admin') }}</button>
      </form>
    </div>
  </div>
{% endblock %}
{% block javascripts %}
  {{ parent() }}
  <script>
    $(document).ready(function() {
        // Gérer la case à cocher "Sélectionner tout"
        $('#select-all').on('change', function() {
            $('.customer-checkbox').prop('checked', $(this).is(':checked'));
        });
        // Gérer la soumission du formulaire en AJAX
        $('#itinerary-form').on('submit', function(e) {
            e.preventDefault(); // Empêcher la soumission standard

            var form = $(this);
            var url = form.attr('action');
            var data = form.serialize();

            $.ajax({
                type: 'POST',
                url: url,
                data: data,
                dataType: 'json',
                success: function(response) {
                    // Rediriger vers la page de l'itinéraire avec l'ID (ou les IDs)
                    // window.location.href = '{{ path('dimsymfony_itinerary_view', {id: 'CUSTOMER_ID'}) }}'.replace('CUSTOMER_ID', response.itinerary_id);
                    //Ici il faut afficher page avec itineraire, pas besoin de redirect, on a tout dans response
                    // Créer une nouvelle fenêtre ou un onglet
                    var itineraryWindow = window.open("", "_blank");
                    itineraryWindow.document.write('<html><head><title>Itinerary</title></head><body>');
                    itineraryWindow.document.write('<h1>Optimized Itinerary</h1>');

                    // Afficher l'adresse de départ
                    itineraryWindow.document.write('<h2>Starting Address:</h2><p>' + response.start_address + '</p>');

                    // Afficher l'itinéraire optimisé
                    itineraryWindow.document.write('<h2>Optimized Route:</h2><ul>');
                    response.optimized_route.forEach(function(stop) {
                      if (stop.is_base) {
                        itineraryWindow.document.write('<li>Base: ' + stop.full_address + '</li>');
                      } else {
                        itineraryWindow.document.write('<li>Client: ' + stop.firstname + ' ' + stop.lastname + ' - ' + stop.full_address + '</li>');
                      }
                    });
                    itineraryWindow.document.write('</ul>');

                    // Afficher le planning de l'itinéraire
                    itineraryWindow.document.write('<h2>Itinerary Schedule:</h2><ul>');
                    response.itinerary_schedule.forEach(function(item) {
                      itineraryWindow.document.write('<li>' + item.time + ' - ' + item.firstname + ' ' + item.lastname + ' (' + item.address + ')</li>');
                    });
                    itineraryWindow.document.write('</ul>');

                    itineraryWindow.document.write('</body></html>');
                    itineraryWindow.document.close();


                },
                error: function(xhr) {
                   // Extraire le message d'erreur de la réponse
                    var errorMessage = 'An error occurred.'; // Message par défaut
                    if (xhr.responseJSON && xhr.responseJSON.error) {
                        errorMessage = xhr.responseJSON.error;
                    } else if (xhr.responseText) {
                        errorMessage = xhr.responseText;
                    }
                    // Afficher le message d'erreur (par exemple, avec une alerte)
                    alert(errorMessage);
                }
            });
        });
    });
  </script>
{% endblock %}
